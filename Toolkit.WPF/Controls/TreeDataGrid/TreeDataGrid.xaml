<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Toolkit.WPF.Controls">

    <!-- ExpanderToggleButton -->
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="Transparent"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="Expanded" Data="M0,9C0,9 5,4.5 5,4.5 5,4.5 0,0 0,0 0,0 0,9 0,9z" HorizontalAlignment="Left" Height="9" Margin="2,1,1,1" Opacity="0.4" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" VerticalAlignment="Center" Width="5"/>
                            <Path x:Name="Collapsed" Data="M0,6C0,6 6,6 6,6 6,6 6,0 6,0 6,0 0,6 0,6z" Fill="#FFA3A3A3" HorizontalAlignment="Left" Height="6" Margin="1,2,1,1" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Visibility="Hidden" VerticalAlignment="Center" Width="6"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="Expanded" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Expanded" Value="#FFE7E7E7" />
                            <Setter Property="Stroke" TargetName="Expanded" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Fill" TargetName="Collapsed" Value="#FFE7E7E7" />
                            <Setter Property="Stroke" TargetName="Collapsed" Value="#FF888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tree を表示するために ColumnHeader は上に寄せる -->
    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>

    <DataTemplate x:Key="ColumnHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Margin>
                <Binding Path="Column.(local:TreeDataGrid.TreeDepthMargin)" Mode="OneWay" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}" />
            </Grid.Margin>
            <ToggleButton 
                Grid.Column="0"
                Style="{StaticResource {x:Type ToggleButton}}"
                IsChecked="{Binding Path=Column.(local:TreeDataGrid.IsExpanded), Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
                Visibility="{Binding Path=Column.(local:TreeDataGrid.TreeExpanderVisibility), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
                />
            <ContentControl Name="Icon" Grid.Column="1" Margin="0 0 4 0" />
            <TextBlock Grid.Column="2" Text="{Binding Name, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RowHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Margin>
                <Binding Path="(local:TreeDataGrid.TreeDepthMargin)" Mode="OneWay" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}" />
            </Grid.Margin>
            <ToggleButton 
                Name="Expander"
                Grid.Column="0" 
                Style="{StaticResource {x:Type ToggleButton}}"
                IsChecked="{Binding Path=(local:TreeDataGrid.IsExpanded), Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                Visibility="{Binding Path=(local:TreeDataGrid.TreeExpanderVisibility), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                />
            <ContentControl Name="Icon" Grid.Column="1" Margin="0 0 4 0" />
            <TextBlock Grid.Column="2" Text="{Binding Name, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type local:TreeDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="SelectionUnit" Value="CellOrRowHeader" />
        <Setter Property="BorderBrush" Value="#F0F0F0" />
        <Setter Property="HorizontalGridLinesBrush" Value="#CECECE" />
        <Setter Property="VerticalGridLinesBrush" Value="#CECECE" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
    </Style>

</ResourceDictionary>