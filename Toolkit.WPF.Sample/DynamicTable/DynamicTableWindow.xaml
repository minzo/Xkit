<Window x:Class="Toolkit.WPF.Sample.DynamicTableWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Toolkit.WPF.Sample"
        xmlns:ckit="clr-namespace:Corekit.Models;assembly=Corekit"
        xmlns:tkit="clr-namespace:Toolkit.WPF.Controls;assembly=Toolkit.WPF"
        xmlns:converters="clr-namespace:Toolkit.WPF.Converters;assembly=Toolkit.WPF"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="DynamicTableWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:DynamicTableWindowViewModel />
    </Window.DataContext>

    <Window.Resources>

        <converters:BoolNot x:Key="BoolNot" />

        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Value}" Value="True">
                    <Setter Property="Background" Value="#50ff661a" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="IsEnabled" Value="{Binding IsReadOnly, Converter={StaticResource BoolNot}}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Opacity" Value="1.0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInheriting}" Value="true">
                    <Setter Property="Opacity" Value="0.3" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="IsEnabled" Value="{Binding IsReadOnly, Converter={StaticResource BoolNot}}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInheriting}" Value="true">
                    <Setter Property="Opacity" Value="0.1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="IsEnabled" Value="{Binding IsReadOnly, Converter={StaticResource BoolNot}}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>


        <tkit:DynamicPropertyTemplateSelector x:Key="CellTemplateSelector">
            <DataTemplate DataType="{x:Type system:Int32}">
                <TextBlock Text="{Binding Value}" Style="{StaticResource TextBlockStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Single}">
                <TextBlock Text="{Binding Value, StringFormat={}{0:0.00######}}" Style="{StaticResource TextBlockStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Double}">
                <TextBlock Text="{Binding Value, StringFormat={}{0:0.00######}}" Style="{StaticResource TextBlockStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:String}">
                <TextBlock Text="{Binding Value}" Style="{StaticResource TextBlockStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Boolean}">
                <Border Style="{StaticResource BorderStyle}">
                    <CheckBox IsChecked="{Binding Value}" Style="{StaticResource CheckBoxStyle}" />
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ckit:IDynamicTable}">
                <tkit:DynamicTableGrid
                    ItemsSource="{Binding Value}"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden">
                    <tkit:DynamicTableGrid.Style>
                        <Style TargetType="{x:Type tkit:DynamicTableGrid}" BasedOn="{StaticResource {x:Type tkit:DynamicTableGrid}}">
                            <Setter Property="MinRowHeight" Value="24" />
                            <Setter Property="HeadersVisibility" Value="None" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Value.RowIndex}" Value="0">
                                    <Setter Property="HeadersVisibility" Value="Column" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Value.ColIndex}" Value="0">
                                    <Setter Property="HeadersVisibility" Value="Row" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Value.RowIndex}" Value="0" />
                                        <Condition Binding="{Binding Value.ColIndex}" Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="HeadersVisibility" Value="All" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </tkit:DynamicTableGrid.Style>
                </tkit:DynamicTableGrid>
            </DataTemplate>
        </tkit:DynamicPropertyTemplateSelector>

        <tkit:DynamicPropertyTemplateSelector x:Key="CellEditingTemplateSelector">
            <DataTemplate DataType="{x:Type system:Int32}">
                <TextBox Text="{Binding Value}" Style="{StaticResource TextBoxStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Single}">
                <TextBox Text="{Binding Value}" Style="{StaticResource TextBoxStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Double}">
                <TextBox Text="{Binding Value}" Style="{StaticResource TextBoxStyle}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:String}">
                <TextBox Text="{Binding Value}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type system:Boolean}">
                <Border Style="{StaticResource BorderStyle}">
                    <CheckBox IsChecked="{Binding Value}" Style="{StaticResource CheckBoxStyle}" />
                </Border>
            </DataTemplate>
        </tkit:DynamicPropertyTemplateSelector>

    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="100" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Button Content="+" Width="20" Command="{Binding AddRowCommand}"/>
                <Button Content="-" Width="20" />
                <Button Content="M" Width="20" Command="{Binding MoveCommand}" />
            </StackPanel>
            <ListBox DisplayMemberPath="Name" ItemsSource="{Binding A_Modules}" />
        </DockPanel>

        <DockPanel Grid.Column="1">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Button Content="+" Width="20" Command="{Binding AddColCommand}" />
                <Button Content="-" Width="20" />
            </StackPanel>
            <ListBox DisplayMemberPath="Name" ItemsSource="{Binding B_Modules}" />
        </DockPanel>

        <tkit:CombinationGrid
            Grid.Column="3"
            tkit:CombinationGrid.IsSharedSizeScope="True"
            ItemsSource="{Binding Table}"
            CellTemplateSelector="{StaticResource CellTemplateSelector}"
            CellEditingTemplateSelector="{StaticResource CellEditingTemplateSelector}"
            />
    </Grid>
</Window>
